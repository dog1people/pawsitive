#it will be set build date by gradle. if this value is @build.date@, front-end is development mode
build.date=@build.date@
server.port=8080
server.address=0.0.0.0
server.servlet.contextPath=/


# Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly.
server.servlet.encoding.charset=UTF-8


# Enable http encoding support.
server.servlet.encoding.enabled=true


# Force the encoding to the configured charset on HTTP requests and responses.
server.servlet.encoding.force=true


# for SPA
#spring.web.resources.static-locations=classpath:/dist/
#spa.default-file=/dist/index.html
spring.web.resources.add-mappings=false


# Swagger
#spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER

# secretKeyManager
jasypt.encryptor.password = ${jasyptPassword}
jasypt.encryptor.ivGeneratorClassname = org.jasypt.iv.RandomIvGenerator
jasypt.encryptor.bean = jasyptEncryptorAES

#database
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true
logging.level.org.hibernate.type.descriptor.sql=trace
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.data.web.pageable.one-indexed-parameters=true

spring.datasource.hikari.connection-timeout=300000000
spring.datasource.url=ENC(/tEu/9hXQYL0bjgMDX7S4vQwt8GT9Vil65EDHw7rljbUHE2gCyzwUrhrOCAuDymxyuqVZAk95L6jUGl9/oakweKVaSIkJmQi0b5q0XwYvT39xnb21HkOBiU3Qgxn0LtIgK4j7ucWjfmRzwTyQWYTd/iAxhHheL9AcYd1/pCnYavHaigahfiRILuUUnzCfB64oL39iqV1m6ga6aQk4gFRfQENtju90ay9Z8juBxiMdYnNvSRYebOvTv2aqmR4vpPupQfBVozgUThVjGhjxw/0Z9piycYV78nO4coIh3VpEow=)
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.hikari.username=ENC(jy6okPSnk28j95mN5u1Bn7ZvOQ0TLJMzr4U2JaYzmFMp4U6/Tqfu+qW/NDLeqVla)
spring.datasource.hikari.password=ENC(47WCyj7HpsGCcL2b7+a4YBkpzhzYoQrZrL8qOP1G8l1E8/7s3u84ZV6rXc2GsX/k)
spring.datasource.hikari.connection-test-query=select 1

#test-repository
#spring.h2.console.enabled=true
#spring.datasource.hikari.jdbc-url=jdbc:h2:mem:mydb
#spring.jpa.defer-datasource-initialization=true
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#redis
spring.data.redis.host=ENC(/6z93BiQDbbz5lHhG/biw40PrenX49VvKF4ww6I9JBQCE1JD4QcaFa8m+3xBMawx)
spring.data.redis.port=6379
spring.data.redis.password=ENC(tHHtbKm22e62OzUEG4sKs/8EZVRz4Y3JhscBvy8wYTHZESTTLhYWayhHFC1Mg8Ya)
spring.data.redis.database=3

# jwt
jwt.secret=0d0afb1c66482895d79717bd11bfaa73250c7bc12febd1662ffb6fd176fa6730
# unit is ms. 15 * 24 * 60 * 60 * 1000 = 15days
jwt.expiration=1296000000
#logging
logging.file.path=/home/ubuntu/pawsitive-api-log

#logging.file.name=api-log-%d{yyyy_MM-dd}.log
#logging.logback.rollingpolicy.max-history=7
#logging.logback.rollingpolicy.max-file-size=10MB
#logging.logback.rollingpolicy.total-size-cap=0
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
#logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} -%msg%n
#spring.output.ansi.enabled=always
#
#logging.level.root=INFO
#logging.level.com.samsung.security=DEBUG
#logging.level.org.springframework.web=DEBUG
#logging.level.org.apache.tiles=INFO
#logging.level.org.sringframework.boot=DEBUG
#logging.level.org.sringframework.security=DEBUG

spring.devtools.livereload.enabled=true


#gzip compression
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css


#for health check
#management.servlet.context-path=/manage
management.health.db.enabled=true
#management.health.default.enabled=true
management.health.diskspace.enabled=true

#springdoc
springdoc.packagesToScan=com.pawsitive.usergroup.controller, com.pawsitive.auth.controller, com.pawsitive.doggroup.controller, com.pawsitive.contentgroup.controller, com.pawsitive.chatgroup.controller, com.pawsitive.communitygroup.controller,com.pawsitive.questiongroup.controller, com.pawsitive.surveygroup.controller
springdoc.pathsToMatch=/api/v1/**
spring.profiles.include=oauth
springdoc.swagger-ui.operations-sorter=alpha

# AWS S3 Bucket
cloud.aws.stack.auto=false
cloud.aws.region.static=ap-northeast-2
cloud.aws.s3.bucket=pawsitive-bucket
cloud.aws.credentials.access-key=ENC(M1g/s+P5jaE1y9FJy70OaWkc3FgmWmB0xJhGrqowv7cxVWuQHfVoIkpJB6eUNeSZfWf/uiT8+m1QjOq5IpJrRA==)
cloud.aws.credentials.secret-key=ENC(4nXJnt9F05dWp4LXYQDomBQNABTcX0u7ZLu3Pj/cEgTnsICnJpA/ap0paOm9XYUbveowV8Uq8LWRDJL49zCBKDmXBL1GlzSelpMdTaSdGHs=)

spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB

# google login
spring.security.oauth2.client.registration.google.client-id=435654792636-u2pp7u1mh6kf1aei0r7jb5h1io2lpe5e.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/api/v1/auth/oauth2/google
spring.security.oauth2.client.registration.google.scope=profile, email

# kakao login
#spring.security.oauth2.client.registration.kakao.client-id=299b99d93cd17b65bdcd4785cf74a645
#spring.security.oauth2.client.registration.kakao.client-secret=15JoZloLUZssagq041kfFrXUB3f9VPdB
#spring.security.oauth2.client.registration.kakao.scope=profile_nickname, profile_image
#spring.security.oauth2.client.registration.kakao.client-name=kakao-login
#spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.kakao.redirect-uri=https://i10c111.p.ssafy.io/login/oauth2/code/kakao
#spring.security.oauth2.client.registration.kakao.client-authentication-method=POST
#spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
#spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
#spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
#spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# naver login
spring.security.oauth2.client.registration.naver.client-id=BfkGaOnMA5ej8VZjwi2r
spring.security.oauth2.client.registration.naver.client-secret=63dcCs1Gni
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/api/v1/auth/oauth2/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name, email
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# Google SMTP
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=pawsitiver24@gmail.com
spring.mail.password=ENC(KTkuB41o7+klHgZ94s7fFIGljiWYYEOZqNUn01zlg3z5XnCWoeD6dT1x8VGtF/n9r+DDEHdEuAOivgIzrHQ51w==)
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.auth-code-expiration-millis=1800000